{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helpers.js","App.js","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","onClick","value","index","borderRadius","width","height","margin","display","gridTemplate","Board","squares","map","square","styles","Game","useState","Array","fill","board","setBoard","xIsNext","setXIsNext","winner","lines","i","length","a","b","c","calculateWinner","boardCopy","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAEMA,EAAQ,CACZC,WAAY,YACZC,OAAQ,qBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QAQIC,EALA,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,MAAnB,OACb,wBAAQV,MAAOA,EAAOQ,QAAS,kBAAMA,EAAQE,IAA7C,SACGD,KCVCT,EAAQ,CACZE,OAAQ,qBACRS,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAWDC,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASV,EAAZ,EAAYA,QAAZ,OACZ,qBAAKR,MAAOA,EAAZ,SACGkB,EAAQC,KAAI,SAACC,EAAQV,GAAT,OACX,cAAC,EAAD,CAAQA,MAAOA,EAAmBD,MAAOW,EAAQZ,QAASA,GAA/BE,SCZjC,IAAMW,EAAS,CACbT,MAAO,QACPE,OAAQ,aAqCKQ,EAlCF,WAAO,IAAD,EACSC,mBAASC,MAAM,GAAGC,KAAK,OADhC,mBACVC,EADU,KACHC,EADG,OAEaJ,oBAAS,GAFtB,mBAEVK,EAFU,KAEDC,EAFC,KAGXC,ECZD,SAAyBZ,GAY9B,IAXA,IAAMa,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIlB,EAAQgB,KAAOhB,EAAQiB,IAAMjB,EAAQgB,KAAOhB,EAAQkB,GACtD,OAAOlB,EAAQgB,GAGnB,OAAO,KDNQG,CAAgBX,GAgB/B,OACE,qCACE,cAAC,EAAD,CAAOR,QAASQ,EAAOlB,QAhBP,SAACE,GACnB,IAAM4B,EAAS,YAAOZ,GAElBY,EAAU5B,IAAUoB,IAExBQ,EAAU5B,GAASkB,EAAU,IAAM,IACnCD,EAASW,GACTT,GAAYD,OAUV,sBAAK5B,MAAOqB,EAAZ,UACE,4BACGS,EACG,WAAaA,EACb,gBAAkBF,EAAU,IAAM,OAExC,wBAAQpB,QAAS,kBAAMmB,EAASH,MAAM,GAAGC,KAAK,QAA9C,+BE7BOc,MAJf,WACE,OAAO,cAAC,EAAD,KCATC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.74c0b063.chunk.js","sourcesContent":["import React from 'react';\n\nconst style = {\n  background: 'lightblue',\n  border: '2px solid darkblue',\n  fontSize: '30px',\n  fontWeight: '800',\n  cursor: 'pointer',\n  outline: 'none',\n};\n\nconst Square = ({ onClick, value, index }) => (\n  <button style={style} onClick={() => onClick(index)}>\n    {value}\n  </button>\n);\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nconst style = {\n  border: '4px solid darkblue',\n  borderRadius: '10px',\n  width: '250px',\n  height: '250px',\n  margin: '0 auto',\n  display: 'grid',\n  gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)',\n};\n\nconst Board = ({ squares, onClick }) => (\n  <div style={style}>\n    {squares.map((square, index) => (\n      <Square index={index} key={index} value={square} onClick={onClick} />\n    ))}\n  </div>\n);\n\nexport default Board;\n","import React, { useState } from 'react';\nimport Board from './Board';\nimport { calculateWinner } from '../helpers';\n\nconst styles = {\n  width: '200px',\n  margin: '20px auto',\n};\n\nconst Game = () => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(board);\n\n  const handleClick = (index) => {\n    const boardCopy = [...board];\n\n    if (boardCopy[index] || winner) return;\n\n    boardCopy[index] = xIsNext ? 'X' : 'O';\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n  };\n\n  const jumpTo = () => {};\n\n  \n\n  return (\n    <>\n      <Board squares={board} onClick={handleClick} />\n      <div style={styles}>\n        <p>\n          {winner\n            ? 'Winner: ' + winner\n            : 'Next Player ' + (xIsNext ? 'X' : 'O')}\n        </p>\n        <button onClick={() => setBoard(Array(9).fill(null))}>Start Game</button>\n      </div>\n    </>\n  );\n};\n\nexport default Game;\n","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}